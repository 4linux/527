---
- hosts: localhost
  connection: local
  vars: 
    JAVA_OPTIONS: "-Djava.awt.headless=true -Djenkins.install.runSetupWizard=false"
    JAVA_ARGS: "$JAVA_ARGS -Dhudson.security.csrf.DefaultCrumbIssuer.EXCLUDE_SESSION_ID=true"
    JENKINS_PLUGINS: ["credentials-binding","git","ssh","build-pipeline-plugin","ws-cleanup","sonar","zap","sonar-quality-gates","chucknorris",'timestamper','dashboard-view','build-timeout','rebuild','htmlpublisher','workflow-aggregator','pipeline-stage-view','build-pipeline-plugin','conditional-buildstep','jenkins-multijob-plugin','parameterized-trigger','git-parameter']
    JENKINS_USER: admin
    JENKINS_PASSWORD: 4linux
  tasks:
    - name: (Jenkins) Adicionando Repositorio
      get_url:
        url: https://pkg.jenkins.io/redhat-stable/jenkins.repo
        dest: /etc/yum.repos.d/

    - name: (Jenkins) Importando Chave do Jenkins
      rpm_key:
        key: https://pkg.jenkins.io/redhat-stable/jenkins.io.key
        state: present

    - name: (NodeJS) Adicionando Repositório 
      shell: curl -sL https://rpm.nodesource.com/setup_10.x | sudo bash - > /opt/nodejs_repo
      args:
        creates: /opt/nodejs_repo
        warn: false

    - name: (Dependência) Garantindo EPEL Release
      yum:
        name: epel-release
        state: present

    - name: (Dependência) Instalando de Pacotes
      yum:
        name: ["git","java-1.8.0-openjdk-devel","jenkins","unzip","wget","nodejs","glx-utils","mesa-dri-drivers","spice-vdagent","xorg-x11-drivers","xorg-x11-server-Xorg","xorg-x11-utils","xorg-x11-xinit","xterm","vim","tree","openscap-scanner","scap-security-guide","scap-workbench","python3","python3-pip","python3-setuptools"]
        state: present

    - name: (Ambiente Gráfico) Instalando Fluxbox
      yum:
        name: fluxbox
        state: present

    - name: (Ambiente Gráfico) Configurando Fluxbox
      lineinfile:
        path: /root/.xinitrc
        create: yes
        line: "exec /usr/bin/fluxbox -display :0"

    - name: (Dependência) Criando Diretórios
      file:
        path: "{{ item.path }}"
        state: directory
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
        mode: 0775
      loop:
      - {path: /var/lib/jenkins/init.groovy.d, owner: "jenkins", group: "jenkins"}
      - {path: /root/report/, owner: "root", group: "root"}

    - name: (Jenkins) Configurando Usuário admin
      template:
        src: ./templates/basic-security.groovy.j2
        dest: /var/lib/jenkins/init.groovy.d/basic-security.groovy
        owner: "jenkins"
        group: "jenkins"
        mode: 0775

    - name: (Jenkins) Alterando JAVA Options
      lineinfile:
        path: /etc/sysconfig/jenkins
        regexp: '^JENKINS_JAVA_OPTIONS='
        line: 'JENKINS_JAVA_OPTIONS="{{ JAVA_OPTIONS }}"'
      register: jenkins_java_options

    - name: (Jenkins) Alterando JAVA ARGS
      lineinfile:
        path: /etc/sysconfig/jenkins
        regexp: '^JAVA_ARGS='
        line: 'JAVA_ARGS="{{ JAVA_ARGS }}"'
      register: jenkins_java_args

    - name: (Jenkins) Iniciando Service
      systemd:
        name: jenkins
        enabled: yes
        state: restarted
      when: jenkins_java_options.changed or jenkins_java_args.changed

    - name: (Jenkins) Aguardando Inicialização
      uri:
        url: http://192.168.77.10:8080
        force_basic_auth: yes
        url_username: "{{ JENKINS_USER }}"
        url_password: "{{ JENKINS_PASSWORD }}"
        status_code: 200
        timeout: 10
      register: jenkins_service_status
      retries: 60
      delay: 10
      until: >
         'status' in jenkins_service_status and
         jenkins_service_status['status'] == 200

    - name: (Jenkins) Instalando Plugins
      jenkins_plugin:
        name: "{{ item }}"
        force_basic_auth: True
        url_username: "{{ JENKINS_USER }}" 
        url_password: "{{ JENKINS_PASSWORD }}"
      loop: "{{ JENKINS_PLUGINS }}"
      register: plugin_result
      until: plugin_result is success
      retries: 5
      delay: 3
      notify: jenkins_restart

    - name: (Dependência) Garantindo Arquivos do Curso
      synchronize:
        src: ./files/testing/
        dest: /opt/
        perms: yes
        recursive: yes

    - name: (OWASP ZAP) Validando Instalador do OWASP ZAP
      stat:
        path: /root/ZAP_2_9_0_unix.sh
      register: zap_installer
    - name: (OWASP ZAP) Baixando Instalador
      get_url:
        url: https://github.com/zaproxy/zaproxy/releases/download/v2.9.0/ZAP_2_9_0_unix.sh
        dest: /root/
        mode: ugo+x
        checksum: sha256:0cd4abdfe072ffd7fed75e7d607913729709a336d53e208803d17bbb3a7a5137
      when: not zap_installer.stat.exists

    - name: (Dependência) Configurando Modulos do Pip
      vars:
        ansible_python_interpreter: /usr/bin/python3
      pip:
        name: ComplexHTTPServer
        executable: pip3
        state: present

  handlers:
  - name: jenkins_restart
    systemd:
      name: jenkins
      enabled: yes 
      state: restarted
