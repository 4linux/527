---
- hosts: localhost
  connection: local
  vars:
    ansible_python_interpreter: /usr/bin/python3
    LOGSTASH_VERSION: 7.8.1
  tasks:
    - name: (Dependência) Instalando Pacotes
      apt:
        name: ["apt-transport-https","ca-certificates","curl","gnupg-agent","software-properties-common","python3","python3-pip","vim","openjdk-11-jre","wget","tree"]
        update_cache: yes
        state: present

    - block:
        - name: (Docker) Adicionando Chave
          apt_key:
            url: https://download.docker.com/linux/debian/gpg
        - name: (Ansible) Adicionando Chave
          apt_key:
            keyserver: keyserver.ubuntu.com
            id: 93C4A3FD7BB9C367

    - name: (Dependência) Adicionando Repositorios
      apt_repository:
        repo: "{{ item }}" 
        state: present
      loop: 
      - "deb [arch=amd64] https://download.docker.com/linux/debian {{ ansible_distribution_release}} stable"
      - "deb http://ppa.launchpad.net/ansible/ansible/ubuntu trusty main"

    - name: (Docker/Ansible) Instalando Pacotes
      apt:
        name: ["docker-ce","docker-compose","ansible"]
        update_cache: yes
        state: present
      notify: docker-service

    - name: (Dependência) Configurando Modulos do Pip
      pip:
        name: "{{ item.pkg }}"
        state: "{{ item.state }}"
      loop:
      - {pkg: "docker-py", state: absent}
      - {pkg: "ComplexHTTPServer", state: present}

    - name: (Elastic Stack) Validando Instalador do Logstash
      stat:
        path: "/root/logstash-{{ LOGSTASH_VERSION }}.deb"
      register: logstash_installer
    - name: (Elastic Stack) Baixando Pacote do Logstash
      get_url:
        url: "https://artifacts.elastic.co/downloads/logstash/logstash-{{ LOGSTASH_VERSION }}.deb"
        dest: "/root/logstash-{{ LOGSTASH_VERSION }}.deb"
      when: not logstash_installer.stat.exists

    - name: (Dependência) Garantindo configuração do rsyslog.conf
      lineinfile:
        path: /etc/rsyslog.conf
        regexp: '^local7'
        line: "local7.*			/var/log/docker.log"
      notify: rsyslog-service

    - name: (Dependência) Garantindo Arquivos do Curso
      synchronize:
        src: ./files/automation/
        dest: /opt/
        perms: yes
        recursive: yes

  handlers:
    - name: docker-service
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: rsyslog-service
      systemd:
        name: rsyslog
        state: restarted
