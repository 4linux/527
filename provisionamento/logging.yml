---
- hosts: localhost
  connection: local
  vars:
    ELASTIC_VERSION: 7.x
  tasks:
    - name: (Elastic Stack) Importando Chaves
      rpm_key:
        key: https://artifacts.elastic.co/GPG-KEY-elasticsearch
        state: present

    - name: (Elastic Stack) Garantindo Repositório
      template:
        src: ./templates/elasticstack.repo.j2
        dest: /etc/yum.repos.d/elasticstack.repo

    - name: (Hashicorp Vault) Garantindo Repositório
      get_url:
        url: https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo
        dest: /etc/yum.repos.d/

    - name: (Dependência) Garantindo Epel-Release e Yum Utils
      yum:
        name: ["epel-release","yum-utils"]
        state: present

    - name: (Dependência) Instalando Pacotes 
      yum:
        name: ["vim","java","ansible","tree","wget","curl","vault","consul","mariadb","redhat-rpm-config","python3-devel","gcc"]
        state: present

    - block:
        - name: (Ansible) Configurando Ansible.cfg
          replace:
            path: /etc/ansible/ansible.cfg
            regexp: '^#(inventory.*)'
            before: '#library        = /usr/share/my_modules/' 
            replace: '\1'
        - replace:
            path: /etc/ansible/ansible.cfg
            regexp: "{{ item }}"
            replace: '\1'
          loop:
          - '^#(host_key_checking.*)'
          - '^#(roles_path.*)'
    
    - name: (Ansible) Preparando Role Wordpress 
      shell: ansible-galaxy init wordpress
      args:
        chdir: /etc/ansible/roles/
        creates: /etc/ansible/roles/wordpress/tasks/main.yml

    - name: (Ansible) Criando Variável p/ MySQL Socket
      lineinfile:
        path: /etc/ansible/roles/wordpress/vars/main.yml
        regexp: '^socket_unix:.*'
        line: 'socket_unix: /run/mysqld/mysqld.sock'

    - name: (Hashicorp Vault) Criando Usuário de Sistema
      user:
        name: "{{ item.user }}"
        home: "{{ item.home }}"
        create_home: yes
        shell: /bin/false
        system: yes
      loop:
      - {user: consul, home: /etc/consul.d/}
      - {user: vault, home: /etc/vault.d/}

    - name: (Hashicorp Vault) Criando Diretórios
      file:
        path: "{{ item.path }}"
        state: directory
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
        mode: 0775
        recurse: yes
      loop:
      - {path: /var/consul/, owner: "consul", group: "consul"}
      - {path: /var/consul/data/vault/, owner: "consul", group: "consul"}

    - name: (Hashicorp Vault) Criando Service files
      template: 
        src: "./templates/{{ item }}"
        dest: /etc/systemd/system/
      loop:
      - consul.service
      - vault.service
      notify: daemon-reload

    - name: (Hashicorp Vault) Garantindo Arquivos de Configuração
      synchronize:
        src: ./files/logging/etc/
        dest: /etc/
        perms: yes
        recursive: yes

    - name: (ElastAlert) Garantindo Configuração de Alerta
      synchronize:
        src: ./files/logging/elastalert
        dest: /opt/
        perms: yes
        recursive: yes

  handlers:
    - name: daemon-reload
      systemd:
        daemon_reload: yes
